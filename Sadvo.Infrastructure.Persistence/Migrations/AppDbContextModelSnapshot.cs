// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sadvo.Infrastructure.Persistence.Contexts;

#nullable disable

namespace Sadvo.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.AsignacionDirigente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("AsignacionesDirigentes", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.Ciudadano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ciudadanos", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.Eleccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaRealizacion")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Elecciones", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("PartidosPoliticos", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.PuestoElectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("PuestosElectivos", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("nvarchar(280)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.AlianzaPolitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaAlianza")
                        .HasColumnType("date");

                    b.Property<int>("PartidoAId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoBId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoAId");

                    b.HasIndex("PartidoBId");

                    b.ToTable("AlianzasPoliticas", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.AsignacionCandidatoPuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("AsignacionesCandidatosPuestos", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoPoliticoId");

                    b.ToTable("Candidatos", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.SolicitudAlianza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaSolicitud")
                        .HasColumnType("date");

                    b.Property<int>("PartidoReceptorId")
                        .HasColumnType("int");

                    b.Property<int>("PartidoSolicitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidoReceptorId");

                    b.HasIndex("PartidoSolicitanteId");

                    b.ToTable("SolicitudesAlianzas", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Elector.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<int>("CiudadanoId")
                        .HasColumnType("int");

                    b.Property<int>("EleccionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVoto")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartidoPoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoElectivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("CiudadanoId");

                    b.HasIndex("EleccionId");

                    b.HasIndex("PartidoPoliticoId");

                    b.HasIndex("PuestoElectivoId");

                    b.ToTable("Votos", (string)null);
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.AsignacionDirigente", b =>
                {
                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoPolitico")
                        .WithMany("AsignacionesDirigente")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.Usuario", "Usuario")
                        .WithOne("AsignacionDirigente")
                        .HasForeignKey("Sadvo.Core.Domain.Entities.Administrador.AsignacionDirigente", "UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoPolitico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.AlianzaPolitica", b =>
                {
                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoA")
                        .WithMany()
                        .HasForeignKey("PartidoAId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoB")
                        .WithMany("Alianzas")
                        .HasForeignKey("PartidoBId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoA");

                    b.Navigation("PartidoB");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.AsignacionCandidatoPuesto", b =>
                {
                    b.HasOne("Sadvo.Core.Domain.Entities.Dirigente.Candidato", "Candidato")
                        .WithMany("PuestosAsignados")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoPolitico")
                        .WithMany("AsignacionesCandidatos")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PuestoElectivo", "PuestoElectivo")
                        .WithMany("CandidatosAsignados")
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("PartidoPolitico");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.Candidato", b =>
                {
                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoPolitico")
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoPolitico");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.SolicitudAlianza", b =>
                {
                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoReceptor")
                        .WithMany()
                        .HasForeignKey("PartidoReceptorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoSolicitante")
                        .WithMany("Solicitudes")
                        .HasForeignKey("PartidoSolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PartidoReceptor");

                    b.Navigation("PartidoSolicitante");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Elector.Voto", b =>
                {
                    b.HasOne("Sadvo.Core.Domain.Entities.Dirigente.Candidato", "Candidato")
                        .WithMany("Votos")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.Ciudadano", "Ciudadano")
                        .WithMany("Votos")
                        .HasForeignKey("CiudadanoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.Eleccion", "Eleccion")
                        .WithMany("Votos")
                        .HasForeignKey("EleccionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", "PartidoPolitico")
                        .WithMany()
                        .HasForeignKey("PartidoPoliticoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sadvo.Core.Domain.Entities.Administrador.PuestoElectivo", "PuestoElectivo")
                        .WithMany()
                        .HasForeignKey("PuestoElectivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Ciudadano");

                    b.Navigation("Eleccion");

                    b.Navigation("PartidoPolitico");

                    b.Navigation("PuestoElectivo");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.Ciudadano", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.Eleccion", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.PartidoPolitico", b =>
                {
                    b.Navigation("Alianzas");

                    b.Navigation("AsignacionesCandidatos");

                    b.Navigation("AsignacionesDirigente");

                    b.Navigation("Candidatos");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.PuestoElectivo", b =>
                {
                    b.Navigation("CandidatosAsignados");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Administrador.Usuario", b =>
                {
                    b.Navigation("AsignacionDirigente");
                });

            modelBuilder.Entity("Sadvo.Core.Domain.Entities.Dirigente.Candidato", b =>
                {
                    b.Navigation("PuestosAsignados");

                    b.Navigation("Votos");
                });
#pragma warning restore 612, 618
        }
    }
}
