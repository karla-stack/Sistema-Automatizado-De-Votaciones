@using Sadvo.Core.Application.ViewModels.Elector
<!-- =================================================================== -->
<!-- Views/Elector/SelectPuesto.cshtml - SELECCIÓN DE PUESTOS -->
<!-- =================================================================== -->
@model List<SelectPuestoViewModel>
@{
    ViewData["Title"] = "Seleccionar Puesto Electoral";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="fas fa-list-alt me-2"></i>
                            Puestos Electorales Disponibles
                        </h4>
                        <div class="badge bg-light text-dark fs-6">
                            @Model.Count(p => p.HasVoted) de @Model.Count completados
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show">
                            <i class="fas fa-check-circle me-2"></i>
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["WarningMessage"] != null)
                    {
                        <div class="alert alert-warning alert-dismissible fade show">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @TempData["WarningMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["InfoMessage"] != null)
                    {
                        <div class="alert alert-info alert-dismissible fade show">
                            <i class="fas fa-info-circle me-2"></i>
                            @TempData["InfoMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <!-- Barra de progreso -->
                    @{
                        var completedCount = Model.Count(p => p.HasVoted);
                        var totalCount = Model.Count;
                        var progressPercentage = totalCount > 0 ? (completedCount * 100 / totalCount) : 0;
                    }

                    <div class="mb-4">
                        <label class="form-label">Progreso de votación:</label>
                        <div class="progress" style="height: 25px;">
                            <div class="progress-bar bg-success"
                                 role="progressbar"
                                 style="width: @progressPercentage%"
                                 aria-valuenow="@progressPercentage"
                                 aria-valuemin="0"
                                 aria-valuemax="100">
                                @progressPercentage.ToString("F0")%
                            </div>
                        </div>
                        <small class="text-muted">@completedCount de @totalCount puestos completados</small>
                    </div>

                    <div class="row">
                        @foreach (var puesto in Model)
                        {
                            <div class="col-md-6 col-lg-4 mb-4">
                                <div class="card h-100 @(puesto.HasVoted ? "border-success" : "border-warning")">
                                    <div class="card-header @(puesto.HasVoted ? "bg-success text-white" : "bg-warning text-dark")">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h6 class="mb-0">@puesto.PuestoNombre</h6>
                                            <span class="badge @(puesto.HasVoted ? "bg-light text-success" : "bg-light text-warning")">
                                                @puesto.StatusText
                                            </span>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text text-muted">@puesto.Descripcion</p>
                                        <p class="mb-2">
                                            <i class="fas fa-users me-2"></i>
                                            <strong>@puesto.TotalCandidatos</strong> candidato@(puesto.TotalCandidatos != 1 ? "s" : "") disponible@(puesto.TotalCandidatos != 1 ? "s" : "")
                                        </p>
                                    </div>
                                    <div class="card-footer">
                                        @if (puesto.HasVoted)
                                        {
                                            <button class="btn btn-success w-100" disabled>
                                                <i class="fas fa-check me-2"></i>
                                                Ya ha votado
                                            </button>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("VoteForPuesto", new { puestoId = puesto.PuestoId })"
                                               class="btn btn-primary w-100">
                                                <i class="fas fa-vote-yea me-2"></i>
                                                Votar
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Botones de acción -->
                    <div class="row mt-4">
                        <div class="col-md-6">
                            @if (Model.All(p => p.HasVoted))
                            {
                                <a href="@Url.Action("FinishVoting")" class="btn btn-success btn-lg w-100">
                                    <i class="fas fa-flag-checkered me-2"></i>
                                    Finalizar Votación
                                </a>
                            }
                            else
                            {
                                <button class="btn btn-outline-success btn-lg w-100" disabled>
                                    <i class="fas fa-clock me-2"></i>
                                    Complete todos los puestos para finalizar
                                </button>
                            }
                        </div>
                        <div class="col-md-6">
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-lg w-100">
                                <i class="fas fa-home me-2"></i>
                                Inicio
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>